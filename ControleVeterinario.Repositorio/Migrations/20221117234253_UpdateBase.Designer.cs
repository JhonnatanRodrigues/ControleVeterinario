// <auto-generated />
using System;
using ControleVeterinario.Repositorio.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleVeterinario.Repositorio.Migrations
{
    [DbContext(typeof(ContextoBanco))]
    [Migration("20221117234253_UpdateBase")]
    partial class UpdateBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ControleVeterinario.Dominio.Alimentacoes.Alimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CodigoAnimal")
                        .HasColumnType("int")
                        .HasColumnName("IdAnimal");

                    b.Property<DateTime>("DataHora_FoiCome")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataHora_FoiCome");

                    b.Property<DateTime?>("DataHora_ParoCome")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataHora_ParoCome");

                    b.Property<bool>("ParoCome")
                        .HasColumnType("bit")
                        .HasColumnName("ParoCome");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAnimal");

                    b.ToTable("CV_Alimentacao", (string)null);
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.ControleVeterinarios.CadastroAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Abat_Morte")
                        .HasColumnType("bit")
                        .HasColumnName("abat_morte");

                    b.Property<int>("CodigoRaca")
                        .HasColumnType("int")
                        .HasColumnName("IdRaca");

                    b.Property<int>("CodigoRfId")
                        .HasColumnType("int")
                        .HasColumnName("IdRFID");

                    b.Property<int>("CodigoTipoAnimal")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoAnimal");

                    b.Property<DateTime?>("DataAbat_Morte")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAbat_Morte");

                    b.Property<DateTime?>("DataNacimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNacimento");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit")
                        .HasColumnName("Genero");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Peso");

                    b.HasKey("Id");

                    b.HasIndex("CodigoRaca");

                    b.HasIndex("CodigoRfId");

                    b.HasIndex("CodigoTipoAnimal");

                    b.ToTable("CV_CadastroAnimais", (string)null);
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.RFIDs.RFID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("CodigoRFID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RFID");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataCadastro");

                    b.Property<bool>("EmUso")
                        .HasColumnType("bit")
                        .HasColumnName("EmUso");

                    b.HasKey("Id");

                    b.ToTable("CV_RFID", (string)null);
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.TipoAnimais.Racas.RacaAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CodigoTipoAnimal")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoAnimal");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Raca");

                    b.HasKey("Id");

                    b.HasIndex("CodigoTipoAnimal");

                    b.ToTable("CV_Raca", (string)null);
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.TipoAnimais.TipoAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("CV_TipoAnimal", (string)null);
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.Alimentacoes.Alimentacao", b =>
                {
                    b.HasOne("ControleVeterinario.Dominio.ControleVeterinarios.CadastroAnimal", "Animal")
                        .WithMany()
                        .HasForeignKey("CodigoAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.ControleVeterinarios.CadastroAnimal", b =>
                {
                    b.HasOne("ControleVeterinario.Dominio.TipoAnimais.Racas.RacaAnimal", "Raca")
                        .WithMany()
                        .HasForeignKey("CodigoRaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleVeterinario.Dominio.RFIDs.RFID", "RFID")
                        .WithMany()
                        .HasForeignKey("CodigoRfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleVeterinario.Dominio.TipoAnimais.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("CodigoTipoAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RFID");

                    b.Navigation("Raca");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("ControleVeterinario.Dominio.TipoAnimais.Racas.RacaAnimal", b =>
                {
                    b.HasOne("ControleVeterinario.Dominio.TipoAnimais.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("CodigoTipoAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoAnimal");
                });
#pragma warning restore 612, 618
        }
    }
}
